plugins {
	id 'maven-publish'
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
	compileSdkVersion 33
	buildToolsVersion "33.0.2"

	defaultConfig {
		minSdkVersion 16
		targetSdkVersion 33
		versionCode 1
		versionName "1.6.3"
		consumerProguardFiles 'proguard-rules.pro'
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
}

dependencies {
	api "androidx.annotation:annotation:1.7.0"

	testImplementation 'junit:junit:4.12'
	testImplementation 'org.assertj:assertj-core:3.8.0'
	testImplementation 'org.robolectric:robolectric:4.7.3'
}


task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task javadoc(type: Javadoc) {
	failOnError false
	source = android.sourceSets.main.java.sourceFiles
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
	publishing {
		publications {
			// Creates a Maven publication called "release".
			release(MavenPublication) {
				// Applies the component for the release build variant.
				from components.release

				groupId = 'io.busybusy.android'
				artifactId = 'dbc'
				version = System.getenv("VERSION_TAG")
			}
		}

		repositories {
			maven {
				name("github")
				setUrl(uri("https://maven.pkg.github.com/busybusy/android-packages"))
				credentials {
					username(System.getenv("GITHUB_PACKAGES_USER"))
					password(System.getenv("GITHUB_PACKAGES_TOKEN"))
				}
			}
		}
	}
}
